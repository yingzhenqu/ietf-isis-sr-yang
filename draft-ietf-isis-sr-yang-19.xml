<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" docName="draft-ietf-isis-sr-yang-18" ipr="trust200902" category="std" consensus="true" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" tocDepth="3" symRefs="true" sortRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.13.1 -->
  <front>
    <title abbrev="IS-IS SR MPLS YANG">A YANG Data Model for IS-IS Segment Routing for the MPLS Data Plane</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-isis-sr-yang-18"/>
    <author fullname="Stephane Litkowski" initials="S" surname="Litkowski">
      <organization>Cisco Systems</organization>
      <address>
        <email>slitkows.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Yingzhen Qu" initials="Y" surname="Qu">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>yingzhen.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Pushpasis Sarkar" initials="P" surname="Sarkar">
      <organization>Individual</organization>
      <address>
        <email>pushpasis.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Ing-Wher Chen" initials="I." surname="Chen">
      <organization>The MITRE Corporation</organization>
      <address>
        <email>ingwherchen@mitre.org</email>
      </address>
    </author>
    <author fullname="Jeff Tantsura" initials="J" surname="Tantsura">
      <organization>Nvidia</organization>
      <address>
        <email>jefftant.ietf@gmail.com</email>
      </address>
    </author>
    <date/>
    <area/>
    <workgroup>LSR Working Group</workgroup>

    <abstract>
      <t>This document defines a YANG data module that can be used to 
        configure and manage IS-IS Segment Routing for MPLS data plane.
      </t>
    </abstract>
  </front>

  <middle>
    <section anchor="introduction" toc="default" numbered="true">
      <name>Overview</name>
      <t>This document defines a YANG data model <xref target="RFC7950"/> that can be used to configure
   and manage IS-IS Segment Routing <xref target="RFC8667" format="default"/> for MPLS data plane
   and it is an augmentation to the IS-IS YANG data model <xref target="RFC9130" format="default"/>.</t>
      <t> The YANG module in this document conforms to the Network Management
Datastore Architecture (NMDA) <xref target="RFC8342" format="default"/>.</t>
      <section numbered="true" toc="default">
        <name>Requirements Language</name>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
        NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
        "MAY", and "OPTIONAL" in this document are to be interpreted as
        described in BCP 14 <xref target="RFC2119" format="default"/> <xref target="RFC8174" format="default"/>
        when, and only when, they appear in all capitals, as shown here.</t>
      </section>
      <section numbered="true" toc="default">
        <name>Tree Diagrams</name>
        <t>This document uses the graphical representation of data models
          defined in <xref target="RFC8340" format="default"/>.</t>
      </section>
    </section>

    <section anchor="design" toc="default" numbered="true">
      <name>Design of the IS-IS MPLS Segment Routing Module</name>
      <t>This document defines a YANG model for IS-IS Segment Routing for the MPLS data plane.  It
   is an augmentation of the IS-IS base model.</t>
      <t>The IS-IS SR MPLS YANG module requires support for the base segment routing
   module <xref target="RFC9020" format="default"/>, which defines the global segment
   routing configuration independent of any specific routing protocol configuration, and support of IS-IS base model <xref target="RFC9130" format="default"/>
   which defines basic IS-IS configuration and state.</t>

        <section anchor="spring-activation" toc="default" numbered="true">
          <name>Segment Routing Activation</name>
          <t>
		Activation of IS-IS SR MPLS is done by setting the "enable" leaf to true.
		This triggers advertisement of SR MPLS extensions based on the configuration parameters that have been
		setup using the base segment routing module.
          </t>
        </section>

        <section anchor="spring-ms" toc="default" numbered="true">
          <name>Advertising Mapping Server Policy</name>
          <t>
		The base segment routing module defines mapping server policies. 
		By default, IS-IS will not advertise or process any mapping server entry.
		The IS-IS SR MPLS module allows the advertisement of one or multiple mapping server policies through the "bindings/advertise/policies" leaf-list.
		The "bindings/receive" leaf controls the reception and process of mapping server entries.
          </t>
        </section>

        <section anchor="spring-ipfrr" toc="default" numbered="true">
          <name>IP Fast Reroute</name>
          <t>
		IS-IS SR MPLS model augments the fast-reroute container under interface.
		It brings the ability to activate TI-LFA (topology independent LFA) and also enhances remote LFA to use
		segment-routing tunneling instead of LDP.
          </t>
        </section>
      </section>

    <section numbered="true" toc="default">
        <name>IS-IS MPLS Segment Routing Module Tree</name>
      <t>The figure below describes the overall structure of the isis-sr-mpls
      YANG module:</t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
module: ietf-isis-sr-mpls
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis:
    +--rw segment-routing
    |  +--rw enabled?    boolean
    |  +--rw bindings {mapping-server}?
    |     +--rw advertise
    |     |  +--rw policies*   -> /rt:routing/sr:segment-routing
    |     |                       /sr-mpls:sr-mpls/bindings
    |     |                       /mapping-server/policy/name
    |     +--rw receive?     boolean
    +--rw protocol-srgb {sr-mpls:protocol-srgb}?
       +--rw srgb* [lower-bound upper-bound]
          +--rw lower-bound    uint32
          +--rw upper-bound    uint32
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis
          /isis:interfaces/isis:interface:
    +--rw segment-routing
       +--rw adjacency-sid
          +--rw adj-sids* [value]
          |  +--rw value-type?   enumeration
          |  +--rw value         uint32
          |  +--rw protected?    boolean
          |  +--rw weight?       uint8
          +--rw advertise-adj-group-sid* [group-id]
          |  +--rw group-id    uint32
          +--rw advertise-protection?      enumeration
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:interfaces
          /isis:interface/isis:fast-reroute/isis:lfa:
    +--rw ti-lfa {ti-lfa}?
       +--rw enable?                   boolean
       +--rw selection-tie-breakers
          +--rw node-protection!
          |  +--rw priority?   uint8
          +--rw srlg-disjoint!
             +--rw priority?   uint8
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:interfaces
          /isis:interface/isis:fast-reroute/isis:lfa/isis:level-1:
    +--rw ti-lfa {ti-lfa}?
       +--rw enable?   boolean
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:interfaces
          /isis:interface/isis:fast-reroute/isis:lfa/isis:level-2:
    +--rw ti-lfa {ti-lfa}?
       +--rw enable?   boolean
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:interfaces
          /isis:interface/isis:fast-reroute/isis:lfa/isis:remote-lfa:
    +--rw use-segment-routing-path?   boolean {remote-lfa-sr}?
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:interfaces
          /isis:interface/isis:adjacencies/isis:adjacency:
    +--ro adjacency-sid* [value]
       +--ro value                   uint32
       +--ro af?                     iana-rt-types:address-family
       +--ro weight?                 uint8
       +--ro protection-requested?   boolean
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:database
          /isis:levels/isis:lsp/isis:router-capabilities:
    +--ro sr-capability
    |  +--ro sr-capability
    |  |  +--ro sr-capability-bits*   identityref
    |  +--ro global-blocks
    |     +--ro global-block* []
    |        +--ro range-size?    uint32
    |        +--ro sid-sub-tlv
    |           +--ro sid?   uint32
    +--ro sr-algorithms
    |  +--ro sr-algorithm*   identityref
    +--ro local-blocks
    |  +--ro local-block* []
    |     +--ro range-size?    rt-types:uint24
    |     +--ro sid-sub-tlv
    |        +--ro sid?   uint32
    +--ro srms-preference
       +--ro preference?   uint8
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:database
          /isis:levels/isis:lsp/isis:extended-is-neighbor
          /isis:neighbor:
    +--ro sid-list* [value]
       +--ro value            uint32
       +--ro adj-sid-flags
       |  +--ro bits*   identityref
       +--ro weight?          uint8
       +--ro neighbor-id?     isis:system-id
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:database
          /isis:levels/isis:lsp/isis:mt-is-neighbor/isis:neighbor:
    +--ro sid-list* [value]
       +--ro value            uint32
       +--ro adj-sid-flags
       |  +--ro bits*   identityref
       +--ro weight?          uint8
       +--ro neighbor-id?     isis:system-id
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:database
          /isis:levels/isis:lsp/isis:extended-ipv4-reachability
          /isis:prefixes:
    +--ro sid-list* [value]
       +--ro value               uint32
       +--ro perfix-sid-flags
       |  +--ro bits*   identityref
       +--ro algorithm?          identityref
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:database
          /isis:levels/isis:lsp/isis:mt-extended-ipv4-reachability
          /isis:prefixes:
    +--ro sid-list* [value]
       +--ro value               uint32
       +--ro prefix-sid-flags
       |  +--ro bits*   identityref
       +--ro algorithm?          identityref
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:database
          /isis:levels/isis:lsp/isis:ipv6-reachability/isis:prefixes:
    +--ro sid-list* [value]
       +--ro value               uint32
       +--ro perfix-sid-flags
       |  +--ro bits*   identityref
       +--ro algorithm?          identityref
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:database
          /isis:levels/isis:lsp/isis:mt-ipv6-reachability
          /isis:prefixes:
    +--ro sid-list* [value]
       +--ro value               uint32
       +--ro perfix-sid-flags
       |  +--ro bits*   identityref
       +--ro algorithm?          identityref
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis/isis:database
          /isis:levels/isis:lsp:
    +--ro segment-routing-bindings* [prefix range]
       +--ro prefix               inet:ip-prefix
       +--ro range                uint16
       +--ro sid-binding-flags
       |  +--ro bits*   identityref
       +--ro binding
          +--ro prefix-sid
             +--ro sid-list* [value]
                +--ro value               uint32
                +--ro perfix-sid-flags
                |  +--ro bits*   identityref
                +--ro algorithm?          identityref

]]></artwork>
      </section>

      <section anchor="isis-sr-yang" toc="default" numbered="true">
        <name>IS-IS MPLS Segment Routing YANG Module</name>
        <t>
          <xref target="RFC6991"/>, <xref target="RFC8294"/>, <xref target="RFC8349"/>,
          <xref target="RFC8667"/>, <xref target="RFC9020"/>, and <xref target="RFC9130"/>
          are referenced in the YANG model.
        </t>
        <sourcecode name="ietf-isis-sr-mpls@2023-12-16.yang" type="" markers="true"><![CDATA[
module ietf-isis-sr-mpls {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-isis-sr-mpls";
  
  prefix isis-sr-mpls;

  import ietf-routing {
    prefix rt;
    reference
      "RFC 8349 - A YANG Data Model for Routing
                  Management (NMDA Version)";
  }

  import ietf-inet-types {
    prefix inet;
    reference 
      "RFC 6991 - Common YANG Data Types";
  }

  import ietf-segment-routing-common {
    prefix sr-cmn;
    reference
      "RFC 9020 - YANG Data Model for Segment Routing";
  }

  import ietf-segment-routing-mpls {
    prefix sr-mpls;
    reference
      "RFC 9020 - YANG Data Model for Segment Routing";
  }
  
  import ietf-isis {
    prefix isis;
    reference
      "RFC 9130 - YANG Data Model for IS-IS Protocol";
  }
  
  import iana-routing-types {
    prefix iana-rt-types;
    reference
      "RFC 8294 - Common YANG Data Types for the Routing Area";
  }

  import ietf-routing-types {
    prefix rt-types;
    reference
      "RFC 8294 - Common YANG Data Types for the Routing Area";
  }

  organization
    "IETF LSR - Link State Routing Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/lsr/>
     WG List:  <mailto:lsr@ietf.org>

     Author:    Stephane Litkowski
                <mailto:slitkows.ietf@gmail.com>
     Author:    Yingzhen Qu
                <mailto:yingzhen.ietf@gmail.com>
     Author:    Acee Lindem
                <mailto:acee.ietf@gmail.com>
     Author:    Pushpasis Sarkar
                <mailto:pushpasis.ietf@gmail.com>
     Author:    Ing-Wher Chen
                <mailto:ingwherchen@mitre.org>
     Author:    Jeff Tantsura
                <mailto:jefftant.ietf@gmail.com>
    ";
  description
    "The YANG module defines the generic configuration and
     operational state for Segment Routing ISIS extensions for the
     MPLS data plane, which is common across all of the vendor
     implementations.

     This YANG model conforms to the Network Management
     Datastore Architecture (NMDA) as described in RFC 8342.

     Copyright (c) 2023 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX
     (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
     for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.

     This version of this YANG module is part of RFC XXXX;
     see the RFC itself for full legal notices.";
  reference
    "RFC XXXX";

  revision 2023-12-16 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: A YANG Data Model for IS-IS Segment Routing for the
                 MPLS Data Plane";
  }

  /* Identities */

  identity sr-capability {
    description
      "Base identity for ISIS SR-Capabilities sub-TLV flags";
    reference
      "RFC 8667 - IS-IS Extensions for Segment Routing";
  }

  identity mpls-ipv4 {
    base sr-capability;
    description
      "If set, then the router is capable of
       processing SR MPLS encapsulated IPv4 packets
       on all interfaces.";
  }

  identity mpls-ipv6 {
    base sr-capability;
    description
      "If set, then the router is capable of
       processing SR MPLS encapsulated IPv6 packets
       on all interfaces.";
  }

  identity prefix-sid-bit {
    description
      "Base identity for prefix SID sub-TLV bits.";
    reference
      "RFC 8667 - IS-IS Extensions for Segment Routing";
  }

  identity r-bit {
    base prefix-sid-bit;
    description
      "Re-advertisement Flag.";
  }

  identity n-bit {
    base prefix-sid-bit;
    description
      "Node-SID Flag.";
  }

  identity p-bit {
    base prefix-sid-bit;
    description
      "No-PHP (No Penultimate Hop-Popping) Flag.";
  }

  identity e-bit {
    base prefix-sid-bit;
    description
      "Explicit NULL Flag.";
  }

  identity v-bit {
    base prefix-sid-bit;
    description
      "Value Flag.";
  }

  identity l-bit {
    base prefix-sid-bit;
    description
      "Local Flag.";
  }

  identity adj-sid-bit {
    description
      "Base identity for Adj-SID sub-TLV bits.";
    reference
      "RFC 8667 - IS-IS Extensions for Segment Routing";
  }

  identity f-bit {
    base adj-sid-bit;
    description
      "Address-Family flag.";
  }

  identity b-bit {
    base adj-sid-bit;
    description
      "Backup flag.";
  }

  identity vi-bit {
    base adj-sid-bit;
    description
      "Value/Index flag.";
  }

  identity lo-bit {
    base adj-sid-bit;
    description
      "Local flag.";
  }

  identity s-bit {
    base adj-sid-bit;
    description
      "Group flag.";
  }

  identity pe-bit {
    base adj-sid-bit;
    description
      "Persistent flag.";
  }

  identity sid-binding-bit {
    description
      "Base identity for sid binding tlv bits.";
    reference
      "RFC 8667 - IS-IS Extensions for Segment Routing";
  }

  identity af-bit {
    base sid-binding-bit;
    description
      "Address-Family flag.";
  }

  identity m-bit {
    base sid-binding-bit;
    description
      "Mirror Context flag.";
  }

  identity sf-bit {
    base sid-binding-bit;
    description
      "S flag. If set, the binding label TLV should be flooded
       across the entire routing domain.";
  }

  identity d-bit {
    base sid-binding-bit;
    description
      "Leaking flag.";
  }

  identity a-bit {
    base sid-binding-bit;
    description
      "Attached flag.";
  }

  /* Features */

  feature remote-lfa-sr {
    description
      "Enhance rLFA to use SR path.";
    reference
      "RFC 8102: Remote-LFA Node Protection and Manageability";
  }

  feature ti-lfa {
    description
      "Topology-Independent Loop-Free Alternate (TI-LFA)
       computation using segment routing.";
    reference
      "draft-ietf-rtgwg-segment-routing-ti-lfa -
       Topology-Independent Fast Reroute using Segment Routing";
  }

  /* Groupings */

  grouping sid-sub-tlv {
    description
      "SID/Label sub-TLV grouping.";
    container sid-sub-tlv {
      description
        "Used to advertise the SID/Label associated with a
         prefix or adjacency.";
      leaf sid {
        type uint32;
        description
          "Segment Identifier (SID) - A 20 bit label or
           32 bit SID.";
      }
    }
  }

  grouping sr-capability {
    description
      "SR capability grouping.";
    container sr-capability {
      description
        "Segment Routing capability.";
      container sr-capability {
        leaf-list sr-capability-bits {
          type identityref {
            base sr-capability;
          }
          description
            "SR Capability sub-TLV flags list.";
        }
        description
          "SR Capability Flags.";
      }
      container global-blocks {
        description
          "Segment Routing Global Blocks.";
        list global-block {
          description
            "Segment Routing Global Block.";
          leaf range-size {
            type uint32;
            description
              "The SID range.";
          }
          uses sid-sub-tlv;
        }
      }
    }
  }

  grouping sr-algorithm {
    description
      "SR algorithm grouping.";
    container sr-algorithms {
      description
        "All SR algorithms.";
      leaf-list sr-algorithm {
        type identityref {
          base sr-cmn:prefix-sid-algorithm;
        }
        description
          "The Segment Routing (SR) algorithms that the router is
           currently using.";
      }
    }
  }

  grouping srlb {
    description
      "SR Local Block grouping.";
    container local-blocks {
      description
        "List of SRLBs.";
      list local-block {
        description
          "Segment Routing Local Block.";
        leaf range-size {
          type rt-types:uint24;
          description
            "The SID range.";
        }
        uses sid-sub-tlv;
      }
    }
  }

  grouping srms-preference {
    description
      "The SRMS preference TLV is used to advertise
       a preference associated with the node that acts
       as an SR Mapping Server.";
    container srms-preference {
      description
        "SRMS Preference TLV.";
      leaf preference {
        type uint8 {
          range "0 .. 255";
        }
        description
          "SRMS preference TLV, value from 0 to 255.";
      }
    }
  }

  grouping adjacency-state {
    description
      "This group will extend adjacency state.";
    list adjacency-sid {
      key "value";
      config false;
      leaf value {
        type uint32;
        description
          "Value of the Adj-SID.";
      }
      leaf af {
        type iana-rt-types:address-family;
        description
          "Address-family associated with the
           segment ID";
      }
      leaf weight {
        type uint8;
        description
          "Weight associated with
           the adjacency SID.";
      }
      leaf protection-requested {
        type boolean;
        description
          "Describe if the adjacency SID
           must be protected.";
      }
      description
        "List of adjacency Segment IDs.";
    }
  }

  grouping prefix-segment-id {
    description
      "This group defines segment routing extensions
       for prefixes.";
    list sid-list {
      key "value";
      leaf value {
        type uint32;
        description
          "Value of the prefix-SID.";
      }
      container prefix-sid-flags {
        leaf-list bits {
          type identityref {
            base prefix-sid-bit;
          }
          description
            "Prefix SID sub-TLV flag bits list.";
        }
        description
          "Describes flags associated with the
           segment ID.";
      }
      leaf algorithm {
        type identityref {
          base sr-cmn:prefix-sid-algorithm;
        }
        description
          "Algorithm to be used for path computation.";
      }
      description
        "List of segments.";
    }
  }

  grouping adjacency-segment-id {
    description
      "This group defines segment routing extensions
       for adjacencies.";
    list sid-list {
      key "value";
      leaf value {
        type uint32;
        description
          "Value of the Adj-SID.";
      }
      container adj-sid-flags {
        leaf-list bits {
          type identityref {
            base adj-sid-bit;
          }
          description
            "Adj-SID sub-TLV flags list.";
        }
        description
          "Adj-SID sub-TLV flags.";
      }
      leaf weight {
        type uint8;
        description
          "The value represents the weight of the Adj-SID
           for the purpose of load balancing.";
      }
      leaf neighbor-id {
        type isis:system-id;
        description
          "Describes the system ID of the neighbor
           associated with the SID value. This is only
           used on LAN adjacencies.";
      }
      description
        "List of segments.";
    }
  }

  grouping segment-routing-binding-tlv {
    list segment-routing-bindings {
      key "prefix range";
      leaf prefix {
        type inet:ip-prefix;
        description
          "The prefix represents the Forwarding Equivalence
           Class at the tail end of the advertised path.";
      }
      leaf range {
        type uint16;
        description
          "Describes number of elements to assign
           a binding to.";
      }
      container sid-binding-flags {
        leaf-list bits {
          type identityref {
            base sid-binding-bit;
          }
          description
            "SID Binding TLV flag bits list.";
        }
        description
          "Binding flags.";
      }
      container binding {
        container prefix-sid {
          uses prefix-segment-id;
          description
            "Binding prefix SID to the range.";
        }
        description
          "Bindings associated with the range.";
      }
      description
        "This container describes list of SID/Label bindings.
         ISIS reference is TLV 149.";
    }
    description
      "Defines binding TLV for database.";
  }

  /* Configuration */

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis" {
    when "derived-from-or-self(../rt:type, 'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol configuration
       with segment routing.";
    uses sr-mpls:sr-control-plane;
    container protocol-srgb {
      if-feature "sr-mpls:protocol-srgb";
      uses sr-cmn:srgb;
      description
        "Per-protocol SRGB.";
    }
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:interfaces/isis:interface" {
    when "derived-from-or-self(../../../rt:type, 'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol configuration
       with segment routing.";
    uses sr-mpls:igp-interface;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:interfaces/isis:interface"
        + "/isis:fast-reroute/isis:lfa" {
    when "derived-from-or-self(../../../../../rt:type,"
        + "'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS interface IP FRR with TILFA.";
    container ti-lfa {
      if-feature "ti-lfa";
      leaf enable {
        type boolean;
        default false;
        description
          "Enables TI-LFA computation.";
      }
      container selection-tie-breakers {
        container node-protection {
          presence "Presence of container enables the node
                    protection tie-breaker";
          leaf priority {
            type uint8;
            default 128;
            description
              "Priority for node protection tie-breaker with
               a lower priority being more preferred.";
          }
          description
            "Enable node protection as a TI-LFA path
             selection tie-breaker. A path providing node
             protection will be selected over one that
             doesn't provide node protection.";
        }
        container srlg-disjoint {
          presence "Presence of container enables the SRLG
                    disjoint tie-breaker";
          leaf priority {
            type uint8;
            default 128;
            description
              "Priority for SRLG disjoint tie-breaker with
               a lower priority being more preferred.";
          }
          description
            "Enable SRLG (Shared Resource Link Group)
             disjoint  as a TI-LFA path selection tie-breaker.
             A path providing node a disjoint path for SRLG
             links from the primary path will be selected over
             one that doesn't provide an SRLG disjoint path.";
        }
        description
          "Configure path selection tie-breakers and their
           respective priorities for the TI-LFA computation.";
      }
      description
        "Topology Independent Loop Free Alternate
         (TI-LFA) support.";
    }
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:interfaces/isis:interface"
        + "/isis:fast-reroute/isis:lfa/isis:level-1" {
    when "derived-from-or-self(../../../../../../rt:type,"
        + "'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS interface level-1 IP FRR with TILFA.";
    container ti-lfa {
      if-feature "ti-lfa";
      leaf enable {
        type boolean;
        default false;
        description
          "Enables TI-LFA computation.";
      }
      description
        "TI-LFA configuration.";
    }
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:interfaces/isis:interface"
        + "/isis:fast-reroute/isis:lfa/isis:level-2" {
    when "derived-from-or-self(../../../../../../rt:type,"
        + "'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS IP interface level-2 FRR with TILFA.";
    container ti-lfa {
      if-feature "ti-lfa";
      leaf enable {
        type boolean;
        default false;
        description
          "Enables TI-LFA computation.";
      }
      description
        "TI-LFA configuration.";
    }
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:interfaces/isis:interface"
        + "/isis:fast-reroute/isis:lfa/isis:remote-lfa" {
    when "derived-from-or-self(../../../../../../rt:type," 
          + "'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS remoteLFA config with
       use of segment-routing path.";
    leaf use-segment-routing-path {
      if-feature "remote-lfa-sr";
      type boolean;
      default false;
      description
        "Force remote LFA to use segment routing path instead of LDP
         path. The value of this leaf is in effect only when
         remote-lfa is enabled.";
    }
  }

  /* Operational states */

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:interfaces/isis:interface"
        + "/isis:adjacencies/isis:adjacency" {
    when "derived-from-or-self(../../../../../rt:type, 'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol configuration
       with segment routing.";
    uses adjacency-state;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:database/isis:levels/isis:lsp"
        + "/isis:router-capabilities" {
    when "derived-from-or-self(../../../../../rt:type, 'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB router capability.";
    uses sr-capability;
    uses sr-algorithm;
    uses srlb;
    uses srms-preference;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:database/isis:levels/isis:lsp"
        + "/isis:extended-is-neighbor/isis:neighbor" {
    when "derived-from-or-self(../../../../../../rt:type," 
          + "'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB neighbor.";
    uses adjacency-segment-id;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:database/isis:levels/isis:lsp"
        + "/isis:mt-is-neighbor/isis:neighbor" {
    when "derived-from-or-self(../../../../../../rt:type,"
          + "'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB neighbor.";
    uses adjacency-segment-id;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:database/isis:levels/isis:lsp"
        + "/isis:extended-ipv4-reachability/isis:prefixes" {
    when "derived-from-or-self(../../../../../../rt:type,"
          + "'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB prefix.";
    uses prefix-segment-id;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:database/isis:levels/isis:lsp"
        + "/isis:mt-extended-ipv4-reachability/isis:prefixes" {
    when "derived-from-or-self(../../../../../../rt:type,"
          + "'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB prefix.";
    uses prefix-segment-id;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:database/isis:levels/isis:lsp"
        + "/isis:ipv6-reachability/isis:prefixes" {
    when "derived-from-or-self(../../../../../../rt:type,"
          + "'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB prefix.";
    uses prefix-segment-id;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:database/isis:levels/isis:lsp"
        + "/isis:mt-ipv6-reachability/isis:prefixes" {
    when "derived-from-or-self(../../../../../../rt:type,"
          + "'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB prefix.";
    uses prefix-segment-id;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol"
        + "/isis:isis/isis:database/isis:levels/isis:lsp" {
    when "derived-from-or-self(../../../../rt:type,"
          + "'isis:isis')" {
      description
        "This augments ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB.";
    uses segment-routing-binding-tlv;
  }
}
]]></sourcecode>
      </section>

    <section anchor="Security" toc="default" numbered="true">
      <name>Security Considerations</name>
      <t>The YANG module specified in this document defines a schema for data
        that is designed to be accessed via network management protocols such
        as NETCONF <xref target="RFC6241" format="default"/> or RESTCONF <xref target="RFC8040" format="default"/>.
        The lowest NETCONF layer is the secure transport layer, and the
        mandatory-to-implement secure transport is Secure Shell (SSH) <xref target="RFC6242" format="default"/>.
        The lowest RESTCONF layer is HTTPS, and the mandatory-to-implement
        secure transport is TLS <xref target="RFC8446" format="default"/>.</t>
      <t>The NETCONF Access Control Model (NACM) <xref target="RFC8341" format="default"/> provides
        the means to restrict access for particular NETCONF or RESTCONF users
        to a pre-configured subset of all available NETCONF or RESTCONF protocol
        operations and content.</t>
      <t>There are a number of data nodes defined in this YANG module that are
        writable/creatable/deletable (i.e., config true, which is the
        default). These data nodes may be considered sensitive or vulnerable
        in some network environments. Write operations (e.g., edit-config)
        to these data nodes without proper protection can have a negative
        effect on network operations. These are the subtrees and data nodes
        and their sensitivity/vulnerability:
      </t>
      <ul empty="true" spacing="normal">
        <li>/isis:isis/segment-routing</li>
        <li>/isis:isis/protocol-srgb</li>
        <li>/isis:isis/isis:interfaces/isis:interface/segment-routing</li>
        <li>/isis:isis/isis:interfaces/isis:interface/isis:fast-reroute/ti-lfa</li>
      </ul>
      <t>Some of the readable data nodes in the modules
      may be considered sensitive or vulnerable in some network environments. It is thus
      important to control read access (e.g., via get, get-config, or notification)
      to these data nodes. 
      </t>
      <ul empty="true" spacing="normal">
        <li>/isis:router-capabilities/sr-capability</li>
        <li>/isis:router-capabilities/sr-algorithms</li>
        <li>/isis:router-capabilities/local-blocks</li>
        <li>/isis:router-capabilities/srms-preference</li>
        <li>/isis:router-capabilities/node-msd-tlv</li>
        <li>And the augmentations to the ISIS link state database.</li>
      </ul>
      <t>Unauthorized access to any data node of these subtrees can disclose
        the operational state information of IS-IS protocol on this device.</t>
    </section>
    <section anchor="Contributors" toc="default" numbered="true">
      <name>Contributors</name>
      <t>Authors would like to thank 
	  Derek Yeung, Acee Lindem, Yi Yang
	  for their major contributions to the draft.</t>
    </section>
    <section anchor="Acknowledgements" toc="default" numbered="true">
      <name>Acknowledgements</name>
      <t>MITRE has approved this document for Public Release, Distribution 
        Unlimited, with Public Release Case Number 19-3033.</t>
    </section>
    <section anchor="IANA" toc="default" numbered="true">
      <name>IANA Considerations</name>
      <t>The IANA is requested to assign one new URI from the
   IETF XML registry (<xref target="RFC3688"/>). Authors are suggesting the following URI: </t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
	URI: urn:ietf:params:xml:ns:yang:ietf-isis-sr-mpls
	Registrant Contact: The IESG.
	XML: N/A, the requested URI is an XML namespace
  ]]></artwork>
      <t>This document also requests one new YANG module name in the YANG Module Names registry (<xref target="RFC6020" format="default"/>) with the following suggestion :</t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
	name: ietf-isis-sr-mpls
	namespace: urn:ietf:params:xml:ns:yang:ietf-isis-sr-mpls
	prefix: isis-sr-mpls
	reference: RFC XXXX
  ]]></artwork>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
    <references>
      <name>Normative References</name>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3688.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6020.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6241.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6242.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6991.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7950.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8040.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8294.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8340.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8341.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8342.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8349.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8667.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9020.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9130.xml"/>
    </references>
    <references>
      <name>Informative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8792.xml"/>
    </references>
  </references>
    <section numbered="true" toc="default">
        <name>A Configuration Example</name>
        <t>
          The following is an XML example using the ISIS SR MPLS YANG module defined in this document.
          </t>
        <t>Note: '\' line wrapping per <xref target="RFC8792" format="default"/>. </t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>
  <routing xmlns="urn:ietf:params:xml:ns:yang:ietf-routing">
    <router-id>1.1.1.1</router-id>
    <control-plane-protocols>
      <control-plane-protocol>
        <type xmlns:isis="urn:ietf:params:xml:ns:yang:ietf-isis">\
          isis:isis</type>
        <name>isis</name>
        <isis xmlns="urn:ietf:params:xml:ns:yang:ietf-isis">
          <system-id>1111.2222.3333</system-id>
          <interfaces>
            <interface>
              <name/>
              <segment-routing xmlns="urn:ietf:params:xml:ns:yang:\
                ietf-isis-sr-mpls">
                <adjacency-sid>
                  <adj-sids>
                    <value>38888</value>
                  </adj-sids>
                </adjacency-sid>
              </segment-routing>
            </interface>
          </interfaces>
          <segment-routing xmlns="urn:ietf:params:xml:ns:yang:\
            ietf-isis-sr-mpls">
            <enabled>true</enabled>
          </segment-routing>
          <protocol-srgb xmlns="urn:ietf:params:xml:ns:yang:\
            ietf-isis-sr-mpls">
            <srgb>
              <lower-bound>4000</lower-bound>
              <upper-bound>5000</upper-bound>
            </srgb>
          </protocol-srgb>
        </isis>
      </control-plane-protocol>
    </control-plane-protocols>
  </routing>
            ]]></artwork>
      <t>The following is the same example using JSON format.</t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
{
  "routing": {
    "router-id": "1.1.1.1",
    "control-plane-protocols": {
      "control-plane-protocol": {
        "type": "isis:isis",
        "name": "isis",
        "isis": {
          "system-id": "1111.2222.3333",
          "interfaces": {
            "interface": {
              "name": "",
              "segment-routing": {
                "adjacency-sid": {
                  "adj-sids": {
                    "value": 38888
                  }
                }
              }
            }
          },
          "segment-routing": {
            "enabled": true
          },
          "protocol-srgb": {
            "srgb": {
              "lower-bound": 4000,
              "upper-bound": 5000
            }
          }
        }
      }
    }
  }
}
  ]]></artwork>
</section>
  </back>
</rfc>
